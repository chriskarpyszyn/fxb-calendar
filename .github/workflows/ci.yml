name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'public/streamSchedule.json'
      - 'src/__tests__/streamSchedule.test.js'
      - 'package.json'
      - 'package-lock.json'
      - 'src/**'
      - 'public/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'public/streamSchedule.json'
      - 'src/__tests__/streamSchedule.test.js'
      - 'package.json'
      - 'package-lock.json'
      - 'src/**'
      - 'public/**'

jobs:
  # Fast linting and type checking
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
        
    - name: Install dependencies
      run: |
        npm ci --prefer-offline --no-audit --no-fund || npm install --prefer-offline --no-audit --no-fund
        
    - name: Run ESLint
      run: npm run lint --if-present
      
    - name: Type check
      run: npx tsc --noEmit --if-present

  # Build and test
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
        
    - name: Install dependencies
      run: |
        npm ci --prefer-offline --no-audit --no-fund || npm install --prefer-offline --no-audit --no-fund
        
    - name: Run JSON validation tests
      run: npm run test:json
      
    - name: Run all tests with coverage
      run: npm run test:ci
      
    - name: Build application
      run: npm run build
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
        
    - name: Install dependencies
      run: |
        npm ci --prefer-offline --no-audit --no-fund || npm install --prefer-offline --no-audit --no-fund
        
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

  # Performance check
  performance:
    name: Performance Check
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
        
    - name: Install dependencies
      run: |
        npm ci --prefer-offline --no-audit --no-fund || npm install --prefer-offline --no-audit --no-fund
        
    - name: Build and analyze bundle
      run: |
        npm run build
        npx bundlesize --config bundlesize.config.json || echo "Bundle size check skipped - no config found"
      continue-on-error: true
